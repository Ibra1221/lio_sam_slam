[33mCMake Warning (dev) at /usr/lib/x86_64-linux-gnu/cmake/pcl/Modules/FindFLANN.cmake:45 (find_package):
  Policy CMP0144 is not set: find_package uses upper-case <PACKAGENAME>_ROOT
  variables.  Run "cmake --help-policy CMP0144" for policy details.  Use the
  cmake_policy command to set the policy and suppress this warning.

  CMake variable FLANN_ROOT is set to:

    /usr

  For compatibility, find_package is ignoring the variable, but code in a
  .cmake module might still use it.
Call Stack (most recent call first):
  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:261 (find_package)
  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:306 (find_flann)
  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:570 (find_external_library)
  /opt/ros/jazzy/share/pcl_conversions/cmake/ament_cmake_export_dependencies-extras.cmake:21 (find_package)
  /opt/ros/jazzy/share/pcl_conversions/cmake/pcl_conversionsConfig.cmake:41 (include)
  CMakeLists.txt:20 (find_package)
This warning is for project developers.  Use -Wno-dev to suppress it.
[0m
[33mCMake Warning (dev) at CMakeLists.txt:29 (find_package):
  Policy CMP0074 is not set: find_package uses <PackageName>_ROOT variables.
  Run "cmake --help-policy CMP0074" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  CMake variable PCL_ROOT is set to:

    /usr

  For compatibility, CMake is ignoring the variable.
This warning is for project developers.  Use -Wno-dev to suppress it.
[0m
In file included from [01m[K/home/ibrahim/lio_sam_ws/src/LIO-SAM/src/imuPreintegration.cpp:17[m[K:
[01m[K/usr/local/include/gtsam_unstable/nonlinear/IncrementalFixedLagSmoother.h:17:2:[m[K [01;35m[Kwarning: [m[K#warning "IncrementalFixedLagSmoother was moved to the gtsam/nonlinear directory" [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wcpp-Wcpp]8;;[m[K]
   17 | #[01;35m[Kwarning[m[K "IncrementalFixedLagSmoother was moved to the gtsam/nonlinear directory"
      |  [01;35m[K^~~~~~~[m[K
[01m[K/home/ibrahim/lio_sam_ws/src/LIO-SAM/src/imuPreintegration.cpp:[m[K In constructor â€˜[01m[KIMUPreintegration::[01;32m[KIMUPreintegration[m[K(const rclcpp::NodeOptions&)[m[Kâ€™:
[01m[K/home/ibrahim/lio_sam_ws/src/LIO-SAM/src/imuPreintegration.cpp:248:100:[m[K [01;31m[Kerror: [m[Kconversion from â€˜[01m[Kstd::shared_ptr<gtsam::PreintegrationParams>[m[Kâ€™ to non-scalar type â€˜[01m[Kboost::shared_ptr<gtsam::PreintegrationParams>[m[Kâ€™ requested
  248 |         boost::shared_ptr<gtsam::PreintegrationParams> p = [01;31m[Kgtsam::PreintegrationParams::MakeSharedU(imuGravity)[m[K;
      |                                                            [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~[m[K
[01m[K/home/ibrahim/lio_sam_ws/src/LIO-SAM/src/imuPreintegration.cpp:261:86:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kgtsam::PreintegratedImuMeasurementsT<gtsam::TangentPreintegration>::PreintegratedImuMeasurementsT(boost::shared_ptr<gtsam::PreintegrationParams>&, gtsam::imuBias::ConstantBias&)[m[Kâ€™
  261 |         imuIntegratorImu_ = new gtsam::PreintegratedImuMeasurements(p, prior_imu_bias[01;31m[K)[m[K; // setting up the IMU integration for IMU message thread
      |                                                                                      [01;31m[K^[m[K
In file included from [01m[K/home/ibrahim/lio_sam_ws/src/LIO-SAM/src/imuPreintegration.cpp:8[m[K:
[01m[K/usr/local/include/gtsam/navigation/ImuFactor.h:105:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kgtsam::PreintegratedImuMeasurementsT<PreintegrationType>::[01;32m[KPreintegratedImuMeasurementsT[m[K(const PreintegrationType&, const gtsam::Matrix9&) [35m[K[with PreintegrationType = gtsam::TangentPreintegration; gtsam::Matrix9 = Eigen::Matrix<double, 9, 9, 0, 9, 9>][m[K[m[Kâ€™
  105 |   [01;36m[KPreintegratedImuMeasurementsT[m[K(const PreintegrationType& base, const Matrix9& preintMeasCov)
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/local/include/gtsam/navigation/ImuFactor.h:105:59:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kboost::shared_ptr<gtsam::PreintegrationParams>[m[Kâ€™ to â€˜[01m[Kconst gtsam::TangentPreintegration&[m[Kâ€™
  105 |   PreintegratedImuMeasurementsT([01;36m[Kconst PreintegrationType& base[m[K, const Matrix9& preintMeasCov)
      |                                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~[m[K
[01m[K/usr/local/include/gtsam/navigation/ImuFactor.h:94:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kgtsam::PreintegratedImuMeasurementsT<PreintegrationType>::[01;32m[KPreintegratedImuMeasurementsT[m[K(const std::shared_ptr<gtsam::PreintegrationParams>&, const gtsam::imuBias::ConstantBias&) [35m[K[with PreintegrationType = gtsam::TangentPreintegration][m[K[m[Kâ€™
   94 |   [01;36m[KPreintegratedImuMeasurementsT[m[K(const std::shared_ptr<PreintegrationParams>& p,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/local/include/gtsam/navigation/ImuFactor.h:94:78:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kboost::shared_ptr<gtsam::PreintegrationParams>[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<gtsam::PreintegrationParams>&[m[Kâ€™
   94 |   PreintegratedImuMeasurementsT([01;36m[Kconst std::shared_ptr<PreintegrationParams>& p[m[K,
      |                                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/usr/local/include/gtsam/navigation/ImuFactor.h:85:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kgtsam::PreintegratedImuMeasurementsT<PreintegrationType>::[01;32m[KPreintegratedImuMeasurementsT[m[K() [35m[K[with PreintegrationType = gtsam::TangentPreintegration][m[K[m[Kâ€™
   85 |   [01;36m[KPreintegratedImuMeasurementsT[m[K() {
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/local/include/gtsam/navigation/ImuFactor.h:85:3:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 2 provided
[01m[K/usr/local/include/gtsam/navigation/ImuFactor.h:72:20:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kgtsam::PreintegratedImuMeasurementsT<gtsam::TangentPreintegration>::[01;32m[KPreintegratedImuMeasurementsT[m[K(const gtsam::PreintegratedImuMeasurementsT<gtsam::TangentPreintegration>&)[m[Kâ€™
   72 | class GTSAM_EXPORT [01;36m[KPreintegratedImuMeasurementsT[m[K: public PreintegrationType {
      |                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/local/include/gtsam/navigation/ImuFactor.h:72:20:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
[01m[K/home/ibrahim/lio_sam_ws/src/LIO-SAM/src/imuPreintegration.cpp:262:86:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kgtsam::PreintegratedImuMeasurementsT<gtsam::TangentPreintegration>::PreintegratedImuMeasurementsT(boost::shared_ptr<gtsam::PreintegrationParams>&, gtsam::imuBias::ConstantBias&)[m[Kâ€™
  262 |         imuIntegratorOpt_ = new gtsam::PreintegratedImuMeasurements(p, prior_imu_bias[01;31m[K)[m[K; // setting up the IMU integration for optimization
      |                                                                                      [01;31m[K^[m[K
[01m[K/usr/local/include/gtsam/navigation/ImuFactor.h:105:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kgtsam::PreintegratedImuMeasurementsT<PreintegrationType>::[01;32m[KPreintegratedImuMeasurementsT[m[K(const PreintegrationType&, const gtsam::Matrix9&) [35m[K[with PreintegrationType = gtsam::TangentPreintegration; gtsam::Matrix9 = Eigen::Matrix<double, 9, 9, 0, 9, 9>][m[K[m[Kâ€™
  105 |   [01;36m[KPreintegratedImuMeasurementsT[m[K(const PreintegrationType& base, const Matrix9& preintMeasCov)
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/local/include/gtsam/navigation/ImuFactor.h:105:59:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kboost::shared_ptr<gtsam::PreintegrationParams>[m[Kâ€™ to â€˜[01m[Kconst gtsam::TangentPreintegration&[m[Kâ€™
  105 |   PreintegratedImuMeasurementsT([01;36m[Kconst PreintegrationType& base[m[K, const Matrix9& preintMeasCov)
      |                                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~[m[K
[01m[K/usr/local/include/gtsam/navigation/ImuFactor.h:94:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kgtsam::PreintegratedImuMeasurementsT<PreintegrationType>::[01;32m[KPreintegratedImuMeasurementsT[m[K(const std::shared_ptr<gtsam::PreintegrationParams>&, const gtsam::imuBias::ConstantBias&) [35m[K[with PreintegrationType = gtsam::TangentPreintegration][m[K[m[Kâ€™
   94 |   [01;36m[KPreintegratedImuMeasurementsT[m[K(const std::shared_ptr<PreintegrationParams>& p,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/local/include/gtsam/navigation/ImuFactor.h:94:78:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kboost::shared_ptr<gtsam::PreintegrationParams>[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<gtsam::PreintegrationParams>&[m[Kâ€™
   94 |   PreintegratedImuMeasurementsT([01;36m[Kconst std::shared_ptr<PreintegrationParams>& p[m[K,
      |                                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/usr/local/include/gtsam/navigation/ImuFactor.h:85:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kgtsam::PreintegratedImuMeasurementsT<PreintegrationType>::[01;32m[KPreintegratedImuMeasurementsT[m[K() [35m[K[with PreintegrationType = gtsam::TangentPreintegration][m[K[m[Kâ€™
   85 |   [01;36m[KPreintegratedImuMeasurementsT[m[K() {
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/local/include/gtsam/navigation/ImuFactor.h:85:3:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 2 provided
[01m[K/usr/local/include/gtsam/navigation/ImuFactor.h:72:20:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kgtsam::PreintegratedImuMeasurementsT<gtsam::TangentPreintegration>::[01;32m[KPreintegratedImuMeasurementsT[m[K(const gtsam::PreintegratedImuMeasurementsT<gtsam::TangentPreintegration>&)[m[Kâ€™
   72 | class GTSAM_EXPORT [01;36m[KPreintegratedImuMeasurementsT[m[K: public PreintegrationType {
      |                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/local/include/gtsam/navigation/ImuFactor.h:72:20:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
gmake[2]: *** [CMakeFiles/lio_sam_imuPreintegration.dir/build.make:76: CMakeFiles/lio_sam_imuPreintegration.dir/src/imuPreintegration.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:687: CMakeFiles/lio_sam_imuPreintegration.dir/all] Error 2
gmake[1]: *** Waiting for unfinished jobs....
gmake: *** [Makefile:146: all] Error 2
